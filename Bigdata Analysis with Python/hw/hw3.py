
# Assignment Number ...... 3
# Student Name ........... 배지원
# File Name .............. hw3_배지원
# Program Description .... (1) .format() 메소드를  사용하여 문자열 서식을 설정한다.
# ........................ (2) 영어 관련 메소드인 capitalize()를 사용하여 문자열 서식을 설정한다.
# ........................ (3) 배열형 자료형인 튜플을 생성하고 출력한다.
# ........................ (4) 튜플에 포함된 요소의 개수를 출력한다.
# ........................ (5) 집합의 원소를 요소로 가지는  리스트를 생성하고 출력한다.
# ........................ (6) 리스트 슬라싱을 통해 서브리스트를 생성하고 이를 출력한다.



# 1
steak = 30000 
    # 스테이크 가격에 대한 변수로 steak 를 선언하고 30000이라는 값을 입력하였다.

VAT = 15 
    # 마찬가지로 VAT에 대한 변수를 변수를 선언하므로서 이를 생성하였고, 
    # 15 라는 값을 할당하였다.

price= steak+steak*(VAT/100) 
    # 실제 가격은 스테이크 가격에 VAT가 반영이 되어야 하기 떄문에 
    # 다음과 같은 계산식을 통해 price라는 변수를 생성하였다.

    # 간단하게 int()함수를 통해 이를 정수형으로 변환하여 사용할 수도 있지만,
    # format ()함수에서 자릿수를 지정하기 위하여 기본 float 형식을 유지하였다.

print('스테이크의 원래 가격은 {}원입니다. 하지만 VAT가 {}%로,\
계산하셔야 할 \n가격은 {:.0f}원입니다.'.format(steak,VAT,price))
    # format 함수를 통해 스테이크 가격, VAT, 총 가격을 참조하였다.
    # 이 중 계산해야할 가격에 대해서 {:0f}를 설정해줌으로서 형변환 없이
    # float 형태에서 정수만 출력되도록 하였다.





# 2
s = '@^TrEat EvEryonE yOu meet likE you want tO be treated.$%'
    # 가독성이 떨어지는 문자열 s를 다음과 같이 할당하였다.

s = s[2:-2].capitalize()
    # 가장 첫번쨰 대문자를 제외하고 모든 문자를 소문자로 바꾸기 위하여
    # 대문자를 소문자로 바꾸기 위한 영어 관련 메소드인 capitalize()를 활용하였다.

    # 이러한 메소드는 가장 첫번째 문자에 대해서만 capitalize하기 때문에
    # 특수 문자가 있는 형식에서 첫번째 대문자 T는 바뀌지 않는다.

    # 때문에 문자열 분할[:]을 통해 양쪽 끝 두칸씩 할당된 특수 문자를 제외하였다.
    # 이는 [2:-2]로 표현되며 3번째부터 뒤에서 3번째까지 인덱싱하는 것을 의미한다.

print(s)
    # 할당된 새로운 s 변수를 print 함수를 통해 출력하였다.





# 3
numbers = (2,18,26,89,45,39,14)
    # 정수를 요소로 가지는 number 튜플을 생성한다.
    # 튜플은 불변 자료형이기 때문에 생성 이후 항목의 변경이 불가하기 때문에
    # 순서 유지를 위한 별도의 조치를 할 필요가 없다.

print(numbers)
    # print함수를 이용하여 numbers 튜플을 출력한다.





# 4
print(len(numbers))
    # 튜플에 포함된 요소의 개수를 출력하기 위해 len()함수를 취해 길이를 구한다
    # 튜플의 경우, 집합형 자료형과 다르게 중복이 가능하기 때문에 
    # 튜플에 포함된 요소갯수와 길이는 같다.





# 5
fruits = [frozenset{'apple','orange','strawberry','pear','kiwi'}]
    # 과일이름의 원소를 요소로 가지는 리스트를 생성한다.
    # 리스트는 배열형에 속하며 배혈형의 항목(item)은 
    # 순서를 가지고 있는 특징을 지니고 있기 때문에 순서 유지를 위한 
    # 별도의 설정이 필요 없다.

print(fruits)
    # print 함수를 통해 fruits리스트를 출력한다.






# 6

fruits_sub = fruits[:3]
    # fruits의 처음 세 요소만 포함한 fruits_sub 리스트를 생성하였고,
    # 슬라이싱된 fruits리스트의 sublist를 fruits_sub에 할당하였다.

    # 리스트는 배열형 자료구조이기 때문에 문자열과 마찬가지로 
    # 각 항목(객체)에 인덱스로 슬라이싱이 가능하다.
    # [:n]은 n-1번째 인덱스 까지 접근한다는 의미로,
    # fruits[:3]를 통해 0부터 두번째 위치에 있는 첫 세 요소를 뽑아냈다.

print(fruits_sub)
    # print 함수를 통해 fruits_sub 리스트를 출력한다.
